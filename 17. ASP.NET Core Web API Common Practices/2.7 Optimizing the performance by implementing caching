Optimizing the performance by implementing caching:

- Caching is the common techinque used to improve the performance of the application. In web API
    development, caching can store frequently accessed data in a temporary storage, such as memory or
    disk, to reduce the number of database queries and improve the responsiveness of the application.
- Caching is an effective tool when handling data that is not regularly updated but is costly to
    compute or obtain rom the database. It is also useful when the multiple client access the same
    data frequently.
    As an example, consider an e-commerce applicatioon that displays a list of catageories. The
    categories of the products are not often changed, yet they are frequently viewed by users. To
    improve the performance of the application, we can cache the categories. When the user requests
    the catageories, the application can return the cached data directly without querying the
    database.
-  In ASP.NET Core, we have several options for implementing caching, each suited to a specific
    scenario:
    • In-memory caching:
        This type of caching stores data in the memory of the application. It is fast  and efficient
        and is suitable for scenarios where the data does not need to be shared across multiple
        instances of the application. However, the data will be lost when the application is restarted.
    
    • Distributed caching:
        This type of caching involves storing cached data in a shared storage, such as Redis or
        SQL Server, which can be accessed by multiple instances of the application. It is suitable for
        applications that are deployed with multiple instances, such as a web farm, container
        orchestration, or serverless computing.
    
    • Response caching:
        This caching technique is based on the HTTP caching mechanism.

- we will introduce the in-memory caching and distributed caching in ASP.NET Core web API development,
    as well as the output caching, which is introduced in ASP.NET Core 7.0

-----------------------------------------------------------------------------------------------------------

